<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
File Measures: 
	Number of req in file = 35
	Number of prim req in file = 45
	Number of succeded prim requirements = 39
	Number of failed prim requirements = 6
<FailedRequirement>
	<Requirement>
		ID: [fa_4:]
		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the distance to the RCMTECHTERM_vehicle_ahead falls below the specified speed dependent safety distance, the vehicle brakes are activated.
			</PR>
		</PrimitiveReq>
	</Requirement>
	<Requirement>
		ID: [TempReqId-21:]
		<PrimitiveReq>
			<PR>
				Id: [1]
				text: the driver activates the low beam headlights when turning the light rotary switch to RCMVAL_exterior_lights_on.
			</PR>
		</PrimitiveReq>
	</Requirement>
	<Requirement>
		ID: [TempReqId-19:]
		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if RCMTECHTERM_tip_blinking was activated shortly before the RCMTECHTERM_hazard_warning_light_switch is deactivated, it shall not be activated while the deactivation of the RCMTECHTERM_hazard_warning_light_switch.
			</PR>
		</PrimitiveReq>
	</Requirement>
	<Requirement>
		ID: [fa_81:]
		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  the adaptive cruise control system issues acoustic alarm if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t .
			</PR>
			<PR>
				Id: [2]
				text:  it issues visual warning if the calculated distance is less than (current speed #Div# 3) #Mul# RCMVAR_t2 .
			</PR>
		</PrimitiveReq>
	</Requirement>
	<Requirement>
		ID: [TempReqId-16:]
		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if  the RCMTECHTERM_hazard_warning_light_switch is released, direction indicators flash synchronically.
			</PR>
		</PrimitiveReq>
	</Requirement>
</FailedRequirement>
<SucceededRequirement>
	<Requirement>
		ID: [al_105:]
		text:  if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left, a flashing is released for the left direction indicators before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left, a flashing is released for the left direction indicators before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left.
				<ExtractedComponents>
					[1]: if the driver holds the RCMTECHTERM_pitman_arm for at least 5 seconds to RCMVAL_tip_blinking_left
					[2]: a flashing is released for the left direction indicators before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the driver holds the RCMTECHTERM_pitman_arm to RCMVAL_tip_blinking_left
						SlotType= TimeScope|| Text= for at least 5 seconds
					C[2]==>	Type: ActionScope 
						SlotType= ConditionalScope|| Text= before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= a flashing is released for the left direction indicators
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the driver holds the RCMTECHTERM_pitman_arm to RCMVAL_tip_blinking_left
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the driver
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_tip_blinking_left
							</ArgDetails>
							Arg[2]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_pitman_arm to
							</ArgDetails>
						</Operands>
						<Operator>
							relation:holds
						</Operator>
						Has scope:  true
						<TimeScope>
							TimeType = Scope
							Value = 5
							Unit = seconds
							QPRelation = QP at least
						</TimeScope>
						Is negatted = false
					</Condition>
					<Action>
						Text = a flashing is released for the left direction indicators
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: a flashing
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the left direction indicators
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is released for
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<ConditionalScope>
								scope phase: EndUpPhase
								<Condition>
									Keyword: null
									Text = before the RCMTECHTERM_pitman_arm leaves RCMVAL_tip_blinking_left
									<Operands>
										Arg[0]
										<ArgDetails>
											Mentioned text: the RCMTECHTERM_pitman_arm
										</ArgDetails>
										Arg[1]
										<ArgDetails>
											Mentioned text: RCMVAL_tip_blinking_left
										</ArgDetails>
									</Operands>
									<Operator>
										relation:leaves
									</Operator>
									Has scope:  false
									Is negatted = false
								</Condition>
							</ConditionalScope>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_6:]
		text:  if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance, the vehicle accelerates within 2 seconds before the set speed is reached.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance, the vehicle accelerates within 2 seconds before the set speed is reached.
				<ExtractedComponents>
					[1]: if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance
					[2]: the vehicle accelerates within 2 seconds
					[3]: before the set speed is reached
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance
					C[2]==>	Type: ActionScope 
						SlotType= TimeScope|| Text= within 2 seconds
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the vehicle accelerates
					C[3]==>	Type: ActionScope 
						SlotType= ConditionalScope|| Text= before the set speed is reached
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the distance to the RCMTECHTERM_preceding_vehicle increases above the speed_dependent safety distance
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_True
							</ArgDetails>
						</Operands>
						<Operator>
							relation:equals
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the vehicle accelerates
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the vehicle
							</ArgDetails>
						</Operands>
						<Operator>
							relation:accelerates
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<PreElapsedTime>
								TimeType = PreElapsed
								Value = 2
								Unit = seconds
								QPRelation = equal
							</PreElapsedTime>
								<ConditionalScope>
									scope phase: EndUpPhase
									<Condition>
										Keyword: null
										Text = before the set speed is reached
										<Operands>
											Arg[0]
											<ArgDetails>
												Mentioned text: the set speed
											</ArgDetails>
										</Operands>
										<Operator>
											relation:is reached
										</Operator>
										Has scope:  false
										Is negatted = false
									</Condition>
								</ConditionalScope>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_35:]
		text:  when pressing the RCMTECHTERM_gas_pedal beyond 90, the speed limit is deactivated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  when pressing the RCMTECHTERM_gas_pedal beyond 90, the speed limit is deactivated.
				<ExtractedComponents>
					[1]: when pressing the RCMTECHTERM_gas_pedal beyond 90
					[2]: the speed limit is deactivated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when pressing the RCMTECHTERM_gas_pedal beyond 90
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the speed limit is deactivated
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when pressing the RCMTECHTERM_gas_pedal beyond 90
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: 90
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_gas_pedal beyond
							</ArgDetails>
						</Operands>
						<Operator>
							relation:pressing
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the speed limit is deactivated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the speed limit
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is deactivated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_99:]
		text:  if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20, the distance is set to 2.5. when both vehicles are standing, the absolute distance is regulated to 2m. when the RCMTECHTERM_preceding_vehicle is accelerating, the distance is set to 3 before the vehicle speed exceeds 20 .

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20, the distance is set to 2.
				<ExtractedComponents>
					[1]: if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20
					[2]: the distance is set to 2
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the distance is set to 2
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the speed of the RCMTECHTERM_preceding_vehicle decreases below 20
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the speed of the RCMTECHTERM_preceding_vehicle
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 20
							</ArgDetails>
						</Operands>
						<Operator>
							relation:decreases below
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the distance is set to 2
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the distance
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 2
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is set to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text: 5.
				<ExtractedComponents>
				</ExtractedComponents>
				<ClassifiedComponents>
				</ClassifiedComponents>
				<RCMDetails>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [3]
				text:  when both vehicles are standing, the absolute distance is regulated to 2m.
				<ExtractedComponents>
					[1]: when both vehicles are standing
					[2]: the absolute distance is regulated to 2m
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when both vehicles are standing
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the absolute distance is regulated to 2m
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when both vehicles are standing
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: both vehicles
							</ArgDetails>
						</Operands>
						<Operator>
							relation:are standing
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the absolute distance is regulated to 2m
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the absolute distance
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 2m
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is regulated to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [4]
				text:  when the RCMTECHTERM_preceding_vehicle is accelerating, the distance is set to 3 before the vehicle speed exceeds 20 .
				<ExtractedComponents>
					[1]: when the RCMTECHTERM_preceding_vehicle is accelerating
					[2]: the distance is set to 3
					[3]: before the vehicle speed exceeds 20
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when the RCMTECHTERM_preceding_vehicle is accelerating
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the distance is set to 3
					C[3]==>	Type: ActionScope 
						SlotType= ConditionalScope|| Text= before the vehicle speed exceeds 20
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when the RCMTECHTERM_preceding_vehicle is accelerating
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_preceding_vehicle
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is accelerating
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the distance is set to 3
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the distance
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 3
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is set to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<ConditionalScope>
								scope phase: EndUpPhase
								<Condition>
									Keyword: null
									Text = before the vehicle speed exceeds 20
									<Operands>
										Arg[0]
										<ArgDetails>
											Mentioned text: the vehicle speed
										</ArgDetails>
										Arg[1]
										<ArgDetails>
											Mentioned text: 20
										</ArgDetails>
									</Operands>
									<Operator>
										relation:exceeds
									</Operator>
									Has scope:  false
									Is negatted = false
								</Condition>
							</ConditionalScope>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_31:]
		text:  the current vehicle speed is adopted as speed limit.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  the current vehicle speed is adopted as speed limit.
				<ExtractedComponents>
					[1]: the current vehicle speed is adopted as speed limit
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: FactualRule 
						SlotType= MainSlot|| Text= the current vehicle speed is adopted as speed limit
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the current vehicle speed is adopted as speed limit
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the current vehicle speed
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: speed limit
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is adopted as
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-18:]
		text: the duration of a flashing cycle is 1 second.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: the duration of a flashing cycle is 1 second.
				<ExtractedComponents>
					[1]: the duration of a flashing cycle is 1 second
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: FactualRule 
						SlotType= MainSlot|| Text= the duration of a flashing cycle is 1 second
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the duration of a flashing cycle is 1 second
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the duration of a flashing cycle
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 1#$@$#second
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-28:]
		text: a subvoltage is present if the voltage in the vehicle electrical system is less than 8.5.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: a subvoltage is present if the voltage in the vehicle electrical system is less than 8.
				<ExtractedComponents>
					[1]: a subvoltage is present
					[2]: if the voltage in the vehicle electrical system is less than 8
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Action 
						SlotType= MainSlot|| Text= a subvoltage is present
					C[2]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the voltage in the vehicle electrical system is less than 8
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the voltage in the vehicle electrical system is less than 8
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the voltage in the vehicle electrical system
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 8
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is less than
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = a subvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: a subvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text: 5.
				<ExtractedComponents>
				</ExtractedComponents>
				<ClassifiedComponents>
				</ClassifiedComponents>
				<RCMDetails>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-16:]
		text:  if  the RCMTECHTERM_hazard_warning_light_switch is released, direction indicators flash synchronically. if the ignition key is in the ignition lock, the pulse ratio of bright to dark is 1. if the ignition key is not in the lock, the pulse ratio is 5.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the ignition key is in the ignition lock, the pulse ratio of bright to dark is 1.
				<ExtractedComponents>
					[1]: if the ignition key is in the ignition lock
					[2]: the pulse ratio is 1
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the ignition key is in the ignition lock
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the pulse ratio is 1
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the ignition key is in the ignition lock
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ignition key
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the#$@$#ignition#$@$#lock
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is in
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the pulse ratio is 1
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the pulse ratio
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 1
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text:  if the ignition key is not in the lock, the pulse ratio is 5.
				<ExtractedComponents>
					[1]: if the ignition key is not in the lock
					[2]: the pulse ratio is 5
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the ignition key is not in the lock
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the pulse ratio is 5
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the ignition key is not in the lock
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ignition key
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the#$@$#lock
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is in
						</Operator>
						Has scope:  false
						Is negatted = true
					</Condition>
					<Action>
						Text = the pulse ratio is 5
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the pulse ratio
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 5
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-26:]
		text: if the light rotary switch is RCMVAL_auto, the adaptive RCMTECHTERM_high_beam_headlights are activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the light rotary switch is RCMVAL_auto, the adaptive RCMTECHTERM_high_beam_headlights are activated.
				<ExtractedComponents>
					[1]: if the light rotary switch is RCMVAL_auto
					[2]: the adaptive RCMTECHTERM_high_beam_headlights are activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the light rotary switch is RCMVAL_auto
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the adaptive RCMTECHTERM_high_beam_headlights are activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the light rotary switch is RCMVAL_auto
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the light rotary switch
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_auto
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the adaptive RCMTECHTERM_high_beam_headlights are activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the adaptive RCMTECHTERM_high_beam_headlights
							</ArgDetails>
						</Operands>
						<Operator>
							relation:are activated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-14:]
		text: the cognitive threshold of a human observer shall be set to the deviation that is less than 5.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: the cognitive threshold of a human observer shall be set to the deviation that is less than 5.
				<ExtractedComponents>
					[1]: the cognitive threshold of a human observer shall be set to the deviation that is less than 5
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Action 
						SlotType= MainSlot|| Text= the cognitive threshold of a human observer shall be set to the deviation
						SlotType= HiddenConstraint|| Text= the deviation that is less than 5
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the cognitive threshold of a human observer shall be set to the deviation
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the cognitive threshold of a human observer
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the deviation
							</ArgDetails>
						</Operands>
						<Operator>
							relation:shall be set to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-24:]
		text: if the darkness switch is activated, the ambient lighting is not activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the darkness switch is activated, the ambient lighting is not activated.
				<ExtractedComponents>
					[1]: if the darkness switch is activated
					[2]: the ambient lighting is not activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the darkness switch is activated
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the ambient lighting is not activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the darkness switch is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the darkness switch
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the ambient lighting is not activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ambient lighting
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-12:]
		text: if the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m, the RCMTECHTERM_braking_force is strengthened to 100.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the RCMTECHTERM_brake_pedal exceeds the threshold value RCMVAR_m, the RCMTECHTERM_braking_force is strengthened to 100.
				<ExtractedComponents>
					[1]: if the RCMTECHTERM_brake_pedal exceeds the RCMVAR_m
					[2]: the RCMTECHTERM_braking_force is strengthened to 100
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the RCMTECHTERM_brake_pedal exceeds the RCMVAR_m
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_braking_force is strengthened to 100
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the RCMTECHTERM_brake_pedal exceeds the RCMVAR_m
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_brake_pedal
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the RCMVAR_m
							</ArgDetails>
						</Operands>
						<Operator>
							relation:exceeds
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_braking_force is strengthened to 100
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_braking_force
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 100
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is strengthened to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-34:]
		text: if RCMTECHTERM_advancing_vehicle is not recognized, the high beam illumination is restored within 2 seconds.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if RCMTECHTERM_advancing_vehicle is not recognized, the high beam illumination is restored within 2 seconds.
				<ExtractedComponents>
					[1]: if RCMTECHTERM_advancing_vehicle is not recognized
					[2]: the high beam illumination is restored within 2 seconds
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if RCMTECHTERM_advancing_vehicle is not recognized
					C[2]==>	Type: ActionScope 
						SlotType= TimeScope|| Text= within 2 seconds
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the high beam illumination is restored
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if RCMTECHTERM_advancing_vehicle is not recognized
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: RCMTECHTERM_advancing_vehicle
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is recognized
						</Operator>
						Has scope:  false
						Is negatted = true
					</Condition>
					<Action>
						Text = the high beam illumination is restored
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the high beam illumination
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is restored
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<PreElapsedTime>
								TimeType = PreElapsed
								Value = 2
								Unit = seconds
								QPRelation = equal
							</PreElapsedTime>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-22:]
		text: if the daytime running light is activated, the low beam headlights are activated after starting the engine if the ignition key is in the ignition lock. when the ambient light is activated, the low beam headlights remain active

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the daytime running light is activated, the low beam headlights are activated after starting the engine if the ignition key is in the ignition lock.
				<ExtractedComponents>
					[1]: if the daytime running light is activated
					[2]: the low beam headlights are activated
					[3]: after starting the engine
					[4]: if the ignition key is in the ignition lock
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the daytime running light is activated
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the low beam headlights are activated
					C[3]==>	Type: ActionScope 
						SlotType= ConditionalScope|| Text= after starting the engine
					C[4]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the ignition key is in the ignition lock
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the ignition key is in the ignition lock
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ignition key
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the#$@$#ignition#$@$#lock
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is in
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the low beam headlights are activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the low beam headlights
							</ArgDetails>
						</Operands>
						<Operator>
							relation:are activated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<ConditionalScope>
								scope phase: StartUpPhase
								<Condition>
									Keyword: null
									Text = after starting the engine
									<Operands>
										Arg[0]
										<ArgDetails>
											Mentioned text: the engine
										</ArgDetails>
									</Operands>
									<Operator>
										relation:starting
									</Operator>
									Has scope:  false
									Is negatted = false
								</Condition>
							</ConditionalScope>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text:  when the ambient light is activated, the low beam headlights remain active.
				<ExtractedComponents>
					[1]: when the ambient light is activated
					[2]: the low beam headlights remain active
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when the ambient light is activated
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the low beam headlights remain active
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when the ambient light is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ambient light
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the low beam headlights remain active
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the low beam headlights
							</ArgDetails>
						</Operands>
						<Operator>
							relation:remain
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-32:]
		text: an overvoltage is present if the voltage in the vehicle electrical system is more than 14.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: an overvoltage is present if the voltage in the vehicle electrical system is more than 14.
				<ExtractedComponents>
					[1]: an overvoltage is present
					[2]: if the voltage in the vehicle electrical system is more than 14
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Action 
						SlotType= MainSlot|| Text= an overvoltage is present
					C[2]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the voltage in the vehicle electrical system is more than 14
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the voltage in the vehicle electrical system is more than 14
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the voltage in the vehicle electrical system
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 14
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is more than
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = an overvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: an overvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-20:]
		text: if flashing cycles exceed 1000, the cumulated deviation must not exceed 5.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if flashing cycles exceed 1000, the cumulated deviation must not exceed 5.
				<ExtractedComponents>
					[1]: if flashing cycles exceed 1000
					[2]: the cumulated deviation must not exceed 5
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if flashing cycles exceed 1000
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the cumulated deviation must not exceed 5
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if flashing cycles exceed 1000
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: flashing cycles
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 1000
							</ArgDetails>
						</Operands>
						<Operator>
							relation:exceed
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the cumulated deviation must not exceed 5
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the cumulated deviation
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 5
							</ArgDetails>
						</Operands>
						<Operator>
							relation:must exceed
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-30:]
		text: if a subvoltage is present, the ambient light should not be available.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the ambient light should not be available.
				<ExtractedComponents>
					[1]: if a subvoltage is present
					[2]: the ambient light should not be available
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if a subvoltage is present
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the ambient light should not be available
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if a subvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: a subvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the ambient light should not be available
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the ambient light
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: available
							</ArgDetails>
						</Operands>
						<Operator>
							relation:should be
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_19:]
		text:  the cruise control lever activates the cruise control.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  the cruise control lever activates the cruise control.
				<ExtractedComponents>
					[1]: the cruise control lever activates the cruise control
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: FactualRule 
						SlotType= MainSlot|| Text= the cruise control lever activates the cruise control
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the cruise control lever activates the cruise control
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the cruise control lever
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the cruise control
							</ArgDetails>
						</Operands>
						<Operator>
							relation:activates
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_36:]
		text:  when the pressure on the RCMTECHTERM_gas_pedal decreases below 90, the speed limit is activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  when the pressure on the RCMTECHTERM_gas_pedal decreases below 90, the speed limit is activated.
				<ExtractedComponents>
					[1]: when the pressure on the RCMTECHTERM_gas_pedal decreases below 90
					[2]: the speed limit is activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when the pressure on the RCMTECHTERM_gas_pedal decreases below 90
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the speed limit is activated
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when the pressure on the RCMTECHTERM_gas_pedal decreases below 90
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the pressure on the RCMTECHTERM_gas_pedal
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 90
							</ArgDetails>
						</Operands>
						<Operator>
							relation:decreases below
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the speed limit is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the speed limit
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_5:]
		text:  if the maximum deceleration is RCMVAL_insufficient_to_stop before a collision with the RCMTECHTERM_vehicle_ahead, the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds. the maximum deceleration is 5.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the maximum deceleration is RCMVAL_insufficient_to_stop before a collision with the RCMTECHTERM_vehicle_ahead, the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds.
				<ExtractedComponents>
					[1]: if the maximum deceleration is RCMVAL_insufficient_to_stop before a collision with the RCMTECHTERM_vehicle_ahead
					[2]: the vehicle warns the driver by acoustical signals for 1 seconds every 2 seconds
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: ReqScope 
						SlotType= ConditionalScope|| Text= before a collision with the RCMTECHTERM_vehicle_ahead
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the maximum deceleration is RCMVAL_insufficient_to_stop
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the vehicle warns the driver by acoustical signals
						SlotType= TimeScope|| Text= every 2 seconds
						SlotType= TimeScope|| Text= for 1 seconds
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the maximum deceleration is RCMVAL_insufficient_to_stop
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the maximum deceleration
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_insufficient_to_stop
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the vehicle warns the driver by acoustical signals
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the vehicle
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: acoustical signals
							</ArgDetails>
							Arg[2]
							<ArgDetails>
								Mentioned text: the driver by
							</ArgDetails>
						</Operands>
						<Operator>
							relation:warns
						</Operator>
						Has scope:  true
						<TimeScope>
							TimeType = Scope
							Value = 1
							Unit = seconds
							QPRelation = equal
						</TimeScope>
						Is negatted = false
						is repeated = true
						<InBetweenTime>
							TimeType = InBetween
							Value = 2
							Unit = seconds
							QPRelation = equal
						</InBetweenTime>
					</Action>
					<RequirementScope>
						Activation Moede: G
						<PreconditionalScope>
							<ConditionalScope>
								scope phase: EndUpPhase
								<Condition>
									Keyword: null
									Text = before a collision with the RCMTECHTERM_vehicle_ahead
									<Operands>
										Arg[0]
										<ArgDetails>
											Mentioned text: a collision with the RCMTECHTERM_vehicle_ahead
										</ArgDetails>
										Arg[1]
										<ArgDetails>
											Mentioned text: RCMVAL_True
										</ArgDetails>
									</Operands>
									<Operator>
										relation:equals
									</Operator>
									Has scope:  false
									Is negatted = false
								</Condition>
							</ConditionalScope>
						</PreconditionalScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text:  the maximum deceleration is 5.
				<ExtractedComponents>
					[1]: the maximum deceleration is 5
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: FactualRule 
						SlotType= MainSlot|| Text= the maximum deceleration is 5
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the maximum deceleration is 5
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the maximum deceleration
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 5
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [al_144:]
		text:  the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer.
				<ExtractedComponents>
					[1]: the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: FactualRule 
						SlotType= MainSlot|| Text= the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer
				</ClassifiedComponents>
				<RCMDetails>
					<Action>
						Text = the maximum deviation of the pulse ratio should be below the cognitive threshold of a human observer
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the maximum deviation of the pulse ratio
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the#$@$#cognitive#$@$#threshold of a#$@$#human#$@$#observer
							</ArgDetails>
						</Operands>
						<Operator>
							relation:should be below
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_32:]
		text:  if the speed limit function is activated, the current speed must not exceed the RCMTECHTERM_set_speed_limit.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if the speed limit function is activated, the current speed must not exceed the RCMTECHTERM_set_speed_limit.
				<ExtractedComponents>
					[1]: if the speed limit function is activated
					[2]: the current speed must not exceed the RCMTECHTERM_set_speed_limit
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the speed limit function is activated
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the current speed must not exceed the RCMTECHTERM_set_speed_limit
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the speed limit function is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the speed limit function
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the current speed must not exceed the RCMTECHTERM_set_speed_limit
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the current speed
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_set_speed_limit
							</ArgDetails>
						</Operands>
						<Operator>
							relation:must exceed
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [fa_86:]
		text:  when the velocity window is below 20, the distance to the RCMTECHTERM_vehicle_ahead shall be calculated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  when the velocity window is below 20, the distance to the RCMTECHTERM_vehicle_ahead shall be calculated.
				<ExtractedComponents>
					[1]: when the velocity window is below 20
					[2]: the distance to the RCMTECHTERM_vehicle_ahead shall be calculated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when the velocity window is below 20
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the distance to the RCMTECHTERM_vehicle_ahead shall be calculated
				</ClassifiedComponents>
				<RCMDetails>
					<Trigger>
						Keyword: when
						Text = when the velocity window is below 20
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the velocity window
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: 20
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is below
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the distance to the RCMTECHTERM_vehicle_ahead shall be calculated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the distance to the RCMTECHTERM_vehicle_ahead
							</ArgDetails>
						</Operands>
						<Operator>
							relation:shall be calculated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-29:]
		text: if a subvoltage is present, the adaptive RCMTECHTERM_high_beam_headlight should not be available.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the adaptive RCMTECHTERM_high_beam_headlight should not be available.
				<ExtractedComponents>
					[1]: if a subvoltage is present
					[2]: the adaptive RCMTECHTERM_high_beam_headlight should not be available
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if a subvoltage is present
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the adaptive RCMTECHTERM_high_beam_headlight should not be available
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if a subvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: a subvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the adaptive RCMTECHTERM_high_beam_headlight should not be available
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the adaptive RCMTECHTERM_high_beam_headlight
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: available
							</ArgDetails>
						</Operands>
						<Operator>
							relation:should be
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-17:]
		text:  if  an emergency situation, the RCMTECHTERM_hazard_warning_light_switch is active before the car battery is empty.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if  an emergency situation, the RCMTECHTERM_hazard_warning_light_switch is active before the car battery is empty.
				<ExtractedComponents>
					[1]: if an emergency situation
					[2]: the RCMTECHTERM_hazard_warning_light_switch is active before the car battery is empty
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if an emergency situation
					C[2]==>	Type: ActionScope 
						SlotType= ConditionalScope|| Text= before the car battery is empty
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_hazard_warning_light_switch is active
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if an emergency situation
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: an emergency situation
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_True
							</ArgDetails>
						</Operands>
						<Operator>
							relation:equals
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_hazard_warning_light_switch is active
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_hazard_warning_light_switch
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: active
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<ConditionalScope>
								scope phase: EndUpPhase
								<Condition>
									Keyword: null
									Text = before the car battery is empty
									<Operands>
										Arg[0]
										<ArgDetails>
											Mentioned text: the car battery
										</ArgDetails>
										Arg[1]
										<ArgDetails>
											Mentioned text: empty
										</ArgDetails>
									</Operands>
									<Operator>
										relation:is
									</Operator>
									Has scope:  false
									Is negatted = false
								</Condition>
							</ConditionalScope>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-27:]
		text: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle, the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle, the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds.
				<ExtractedComponents>
					[1]: if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle
					[2]: the RCMTECHTERM_high_beam_headlight that is activated is reduced to low beam headlight within 5 seconds
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle
					C[2]==>	Type: ActionScope 
						SlotType= TimeScope|| Text= within 5 seconds
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_high_beam_headlight is reduced to low beam headlight
						SlotType= HiddenConstraint|| Text= the RCMTECHTERM_high_beam_headlight that is activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the camera recognizes the lights of an RCMTECHTERM_advancing_vehicle
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the camera
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: the lights of an RCMTECHTERM_advancing_vehicle
							</ArgDetails>
						</Operands>
						<Operator>
							relation:recognizes
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_high_beam_headlight is reduced to low beam headlight
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_high_beam_headlight
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: low beam headlight
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is reduced to
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
						<ActionScope>
							<PreElapsedTime>
								TimeType = PreElapsed
								Value = 5
								Unit = seconds
								QPRelation = equal
							</PreElapsedTime>
						</ActionScope>
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-25:]
		text: if the darkness switch is activated, the RCMTECHTERM_cornering_light is not activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the darkness switch is activated, the RCMTECHTERM_cornering_light is not activated.
				<ExtractedComponents>
					[1]: if the darkness switch is activated
					[2]: the RCMTECHTERM_cornering_light is not activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the darkness switch is activated
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_cornering_light is not activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the darkness switch is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the darkness switch
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_cornering_light is not activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_cornering_light
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-35:]
		text:  if  the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight is activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text:  if  the RCMTECHTERM_pitman_arm is pulled, the RCMTECHTERM_high_beam_headlight is activated.
				<ExtractedComponents>
					[1]: if the RCMTECHTERM_pitman_arm is pulled
					[2]: the RCMTECHTERM_high_beam_headlight is activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the RCMTECHTERM_pitman_arm is pulled
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_high_beam_headlight is activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the RCMTECHTERM_pitman_arm is pulled
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_pitman_arm
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is pulled
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_high_beam_headlight is activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_high_beam_headlight
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is activated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-23:]
		text: if the light rotary switch is RCMVAL_automatic, the low beam headlights are activated for at least 3 seconds when the exterior brightness is lower than a threshold RCMVAR_s1. if the exterior brightness exceeds a threshold RCMVAR_s2 that exceeds RCMVAR_s1, the low beam headlights are deactivated for at least 3 seconds.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if the light rotary switch is RCMVAL_automatic, the low beam headlights are activated for at least 3 seconds when the exterior brightness is lower than a threshold RCMVAR_s1.
				<ExtractedComponents>
					[1]: if the light rotary switch is RCMVAL_automatic
					[2]: the low beam headlights are activated for at least 3 seconds
					[3]: when the exterior brightness is lower than a threshold RCMVAR_s1
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the light rotary switch is RCMVAL_automatic
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the low beam headlights are activated
						SlotType= TimeScope|| Text= for at least 3 seconds
					C[3]==>	Type: Trigger 
						SlotType= MainSlot|| Text= when the exterior brightness is lower than a threshold RCMVAR_s1
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the light rotary switch is RCMVAL_automatic
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the light rotary switch
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: RCMVAL_automatic
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Trigger>
						Keyword: when
						Text = when the exterior brightness is lower than a threshold RCMVAR_s1
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the exterior brightness
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: a#$@$#threshold#$@$#RCMVAR_s1
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is lower than
						</Operator>
						Has scope:  false
						Is negatted = false
					</Trigger>
					<Action>
						Text = the low beam headlights are activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the low beam headlights
							</ArgDetails>
						</Operands>
						<Operator>
							relation:are activated
						</Operator>
						Has scope:  true
						<TimeScope>
							TimeType = Scope
							Value = 3
							Unit = seconds
							QPRelation = QP at least
						</TimeScope>
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
			<PR>
				Id: [2]
				text:  if the exterior brightness exceeds a threshold RCMVAR_s2 that exceeds RCMVAR_s1, the low beam headlights are deactivated for at least 3 seconds.
				<ExtractedComponents>
					[1]: if the exterior brightness exceeds a RCMVAR_s2 that exceeds RCMVAR_s1
					[2]: the low beam headlights are deactivated for at least 3 seconds
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if the exterior brightness exceeds a RCMVAR_s2
						SlotType= HiddenConstraint|| Text= a RCMVAR_s2 that exceeds RCMVAR_s1
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the low beam headlights are deactivated
						SlotType= TimeScope|| Text= for at least 3 seconds
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if the exterior brightness exceeds a RCMVAR_s2
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the exterior brightness
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: a RCMVAR_s2
							</ArgDetails>
						</Operands>
						<Operator>
							relation:exceeds
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the low beam headlights are deactivated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the low beam headlights
							</ArgDetails>
						</Operands>
						<Operator>
							relation:are deactivated
						</Operator>
						Has scope:  true
						<TimeScope>
							TimeType = Scope
							Value = 3
							Unit = seconds
							QPRelation = QP at least
						</TimeScope>
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-33:]
		text: if an overvoltage is present, the headlight must be activated.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if an overvoltage is present, the headlight must be activated.
				<ExtractedComponents>
					[1]: if an overvoltage is present
					[2]: the headlight must be activated
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if an overvoltage is present
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the headlight must be activated
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if an overvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: an overvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the headlight must be activated
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the headlight
							</ArgDetails>
						</Operands>
						<Operator>
							relation:must be activated
						</Operator>
						Has scope:  false
						Is negatted = false
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

	<Requirement>
		ID: [TempReqId-31:]
		text: if a subvoltage is present, the RCMTECHTERM_cornering_light should not be available.

		<PrimitiveReq>
			<PR>
				Id: [1]
				text: if a subvoltage is present, the RCMTECHTERM_cornering_light should not be available.
				<ExtractedComponents>
					[1]: if a subvoltage is present
					[2]: the RCMTECHTERM_cornering_light should not be available
				</ExtractedComponents>
				<ClassifiedComponents>
					C[1]==>	Type: Condition 
						SlotType= MainSlot|| Text= if a subvoltage is present
					C[2]==>	Type: Action 
						SlotType= MainSlot|| Text= the RCMTECHTERM_cornering_light should not be available
				</ClassifiedComponents>
				<RCMDetails>
					<Condition>
						Keyword: if
						Text = if a subvoltage is present
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: a subvoltage
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: present
							</ArgDetails>
						</Operands>
						<Operator>
							relation:is
						</Operator>
						Has scope:  false
						Is negatted = false
					</Condition>
					<Action>
						Text = the RCMTECHTERM_cornering_light should not be available
						<Operands>
							Arg[0]
							<ArgDetails>
								Mentioned text: the RCMTECHTERM_cornering_light
							</ArgDetails>
							Arg[1]
							<ArgDetails>
								Mentioned text: available
							</ArgDetails>
						</Operands>
						<Operator>
							relation:should be
						</Operator>
						Has scope:  false
						Is negatted = true
						is repeated = false
					</Action>
					<RequirementScope>
						Activation Moede: G
					</RequirementScope>
				</RCMDetails>
			</PR>
		</PrimitiveReq>
	</Requirement>

</SucceededRequirement>
</log>
